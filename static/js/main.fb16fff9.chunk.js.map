{"version":3,"sources":["components/Title.js","static/wrong_answer.mp3","components/InstrumentItem.js","components/InstrumentList.js","components/GameButton.js","components/GameWords.js","components/ResetButton.js","static/harp.png","static/accordion.png","static/cello.png","static/clarinet.png","static/guitar.png","static/piano.png","static/saxophone.png","static/snare_drum.png","static/trumpet.png","static/harp.mp3","static/saxophone.mp3","static/piano.mp3","static/drum.mp3","static/clarinet.mp3","static/cello.mp3","static/trumpet.mp3","static/guitar.mp3","static/accordion.mp3","components/HonkButton.js","components/Footer.js","containers/MusicBox.js","App.js","reportWebVitals.js","index.js"],"names":["Title","className","InstrumentItem","props","useSound","sound","playbackRate","volume","play","honk","play2","instrumentActions","selectedQuestion","selectedInstrument","name","answer","onClick","event","instrumentClick","instKey","src","image","alt","width","InstrumentList","instruments","instrumentsMapped","map","instrument","index","id","GameButton","pressPlay","GameWords","mode","question","ResetButton","resetEverything","HonkButton","Footer","href","MusicBox","useState","harp","harpSound","saxophone","saxophoneSound","piano","pianoSound","drum","drumSound","clarinet","clarinetSound","cello","celloSound","trumpet","trumpetSound","guitar","guitarSound","accordion","accordionSound","setSelectedInstrument","questions","setSelectedQuestion","setMode","easyQs","hardQs","forEach","push","randomEasyQ","Math","floor","random","length","randomHardQ","instrumentKey","Promise","resolve","reject","then","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb16fff9.chunk.js","sourcesContent":["import React from 'react';\n\nconst Title = () => {\n\n\n    return (\n        <h1 className=\"title\">MUSIC<br></br>BOX!</h1>\n    )\n\n}\n\nexport default Title;","export default __webpack_public_path__ + \"static/media/wrong_answer.ab205713.mp3\";","import React from 'react';\nimport { useState } from 'react';\nimport useSound from 'use-sound';\nimport honk from '../static/wrong_answer.mp3'\n\n\nconst InstrumentItem = (props) => {\n\n    const [play] = useSound(props.sound, { playbackRate: 1.75, volume: 1 });\n    const [play2] = useSound(honk, { playbackRate: 1.5, volume: 1 } )\n    \n\n    const handleClick = (event) => {\n        props.instrumentClick(props.instKey)\n        play(props.sound)\n       \n    }\n\n    const handleClick2 = (event) => {\n        props.instrumentClick(props.instKey)\n        play2(honk)\n    }\n\n    const instrumentActions = \n    props.selectedQuestion !== null && props.selectedInstrument !== null \n    && props.name !== props.selectedQuestion.answer \n    || props.selectedQuestion !== null && props.selectedInstrument === null\n    && props.name !== props.selectedQuestion.answer ?\n        <li onClick={handleClick2} className=\"instrument\">\n            <img className=\"instrument-image\" src={props.image} alt=\"icon of instrument\" width=\"90px\"/>\n            <h3 className=\"instrument-word\">{props.name}</h3>  \n        </li>\n    : \n        <li onClick={handleClick} className=\"instrument\">\n            <img className=\"instrument-image\" src={props.image} alt=\"icon of instrument\" width=\"90px\"/>\n            <h3 className=\"instrument-word\">{props.name}</h3>  \n        </li>\n   \n\n    return (\n        <>\n       {instrumentActions}\n        </>\n    )\n}\n\nexport default InstrumentItem;","import React from 'react';\nimport InstrumentItem from './InstrumentItem';\n\nconst InstrumentList = ({ instruments, instrumentClick, selectedInstrument, selectedQuestion }) => {\n\n   \n\n    const instrumentsMapped = instruments.map((instrument, index) => {\n\n\n        return (\n            <InstrumentItem \n            instrumentClick={instrumentClick} \n            selectedInstrument={selectedInstrument}\n            selectedQuestion={selectedQuestion}\n            name={instrument.name} \n            instKey={instrument.id} \n            index={index}\n            key={instrument.id}\n            image={instrument.image}\n            sound={instrument.sound}\n            >\n            </InstrumentItem>\n        )\n    })\n\n    return (\n        <ul className=\"inst-list\">\n            {instrumentsMapped}\n        </ul>\n    )\n}\n\nexport default InstrumentList;","import React from 'react';\n\nconst GameButton = ({pressPlay, selectedQuestion, selectedInstrument}) => {\n\n\n    const handleClick = () => {\n        pressPlay()\n    }\n\n\n\n    return (\n        \n        <button className=\"game-button\" onClick={handleClick}>\n            {selectedQuestion === null && selectedInstrument === null \n            || selectedQuestion !== null && selectedInstrument === null \n            || selectedQuestion === null && selectedInstrument !== null\n            || selectedQuestion !== null && selectedInstrument.name !== selectedQuestion.answer ? \n            <h2 className=\"game-button-words\">PLAY!</h2>\n            : <h3 className=\"game-button-words\"> PLAY <br></br>AGAIN!</h3>}\n            </button>\n    )\n}\n\nexport default GameButton;","import React from 'react';\n\nconst GameWords = ({ selectedQuestion, selectedInstrument, mode}) => {\n\n\n    \n    const displayWords = \n\n        selectedQuestion === null && selectedInstrument === null \n        || selectedQuestion === null && selectedInstrument !== null ? \n        <h3 className=\"game-words\">PRESS <br></br>PLAY!</h3> \n        : selectedQuestion !== null && selectedInstrument === null ? \n        <h3 className=\"game-words\">{selectedQuestion.question}</h3>\n        : selectedInstrument !== null && selectedInstrument.name === selectedQuestion.answer ? \n        <h3 className=\"game-words\">Well Done! You found the {selectedQuestion.answer}!</h3>\n        : selectedInstrument !== null && selectedInstrument.name !== selectedQuestion.answer ?\n        <h3 className=\"game-words\"> Try Again! <br></br> {selectedQuestion.question} </h3>\n        : \"\"\n        \n    \n\n    return (\n\n\n        displayWords \n    \n\n    )\n\n}\n\nexport default GameWords;\n","import React from 'react';\n\n\nconst ResetButton = ({resetEverything}) => {\n\n    const handleClick = () => {\n        resetEverything()\n    }\n\n    return (\n        <button className=\"reset\" onClick={handleClick}>Reset</button>\n    )\n}\n\nexport default ResetButton;","export default __webpack_public_path__ + \"static/media/harp.a044f396.png\";","export default __webpack_public_path__ + \"static/media/accordion.ee285249.png\";","export default __webpack_public_path__ + \"static/media/cello.18986484.png\";","export default __webpack_public_path__ + \"static/media/clarinet.27a9ef6f.png\";","export default __webpack_public_path__ + \"static/media/guitar.aa936060.png\";","export default __webpack_public_path__ + \"static/media/piano.6de13546.png\";","export default __webpack_public_path__ + \"static/media/saxophone.d49ffdf5.png\";","export default __webpack_public_path__ + \"static/media/snare_drum.7e501c64.png\";","export default __webpack_public_path__ + \"static/media/trumpet.4eab4dc5.png\";","export default __webpack_public_path__ + \"static/media/harp.697f61da.mp3\";","export default __webpack_public_path__ + \"static/media/saxophone.08fa455f.mp3\";","export default __webpack_public_path__ + \"static/media/piano.ffdf0f9a.mp3\";","export default __webpack_public_path__ + \"static/media/drum.9b674fad.mp3\";","export default __webpack_public_path__ + \"static/media/clarinet.567f856f.mp3\";","export default __webpack_public_path__ + \"static/media/cello.6d916710.mp3\";","export default __webpack_public_path__ + \"static/media/trumpet.2b70c1b9.mp3\";","export default __webpack_public_path__ + \"static/media/guitar.160fd6c3.mp3\";","export default __webpack_public_path__ + \"static/media/accordion.0a532a12.mp3\";","import React from 'react';\nimport useSound from 'use-sound';\n\nimport honk from '../static/wrong_answer.mp3'\n\nconst HonkButton = () => {\n    const [play] = useSound(honk);\n\n    return <button className=\"honk\" onClick={play}>HONK!</button>\n}\n\nexport default HonkButton;\n","import React from 'react';\n\nconst Footer = () => {\n\n    return(\n        <div className=\"footer\">\n        <h5>Created using React by Ruth Lillian Foulis 2021. <a className=\"github-link\" href=\"https://github.com/ruthierutho/music-box-react\">GitHub.</a></h5>\n        \n        </div>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport { useState } from 'react';\nimport useSound from 'use-sound';\nimport Title from '../components/Title';\nimport InstrumentList from '../components/InstrumentList';\nimport GameButton from '../components/GameButton';\nimport GameWords from '../components/GameWords';\nimport ResetButton from '../components/ResetButton';\nimport ModeToggle from '../components/ModeToggle';\nimport '../static/MusicBox.css'\nimport harp from '../static/harp.png';\nimport accordion from '../static/accordion.png';\nimport cello from '../static/cello.png';\nimport clarinet from '../static/clarinet.png';\nimport guitar from '../static/guitar.png';\nimport piano from '../static/piano.png';\nimport saxophone from '../static/saxophone.png';\nimport drum from '../static/snare_drum.png';\nimport trumpet from '../static/trumpet.png';\nimport harpSound from '../static/harp.mp3';\nimport saxophoneSound from '../static/saxophone.mp3';\nimport pianoSound from '../static/piano.mp3';\nimport drumSound from '../static/drum.mp3';\nimport clarinetSound from '../static/clarinet.mp3';\nimport celloSound from '../static/cello.mp3';\nimport trumpetSound from '../static/trumpet.mp3';\nimport guitarSound from '../static/guitar.mp3';\nimport accordionSound from '../static/accordion.mp3';\nimport HonkButton from '../components/HonkButton';\nimport Footer from '../components/Footer';\n\n\nfunction MusicBox() {\n\n    const [instruments, setInstruments] = useState(\n        [\n            {\n                \"id\" : 0,\n                \"name\": \"Harp\",\n                \"image\": harp,\n                \"sound\" : harpSound\n            },\n            {\n                \"id\": 1,\n                \"name\": \"Saxophone\",\n                \"image\" : saxophone,\n                \"sound\" : saxophoneSound\n            },\n            {\n                \"id\": 2,\n                \"name\": \"Piano\",\n                \"image\" : piano,\n                \"sound\": pianoSound,\n            },\n            {\n                \"id\": 3,\n                \"name\": \"Drum\",\n                \"image\" : drum,\n                \"sound\": drumSound\n            },\n            {\n                \"id\": 4,\n                \"name\": \"Clarinet\",\n                \"image\" : clarinet,\n                \"sound\": clarinetSound\n            },\n            {\n                \"id\": 5,\n                \"name\": \"Cello\",\n                \"image\" : cello,\n                \"sound\" : celloSound\n            },\n            {\n                \"id\": 6,\n                \"name\": \"Trumpet\",\n                \"image\" : trumpet,\n                \"sound\": trumpetSound\n            },\n            {\n                \"id\": 7,\n                \"name\": \"Guitar\",\n                \"image\" : guitar,\n                \"sound\": guitarSound\n            },\n            {\n                \"id\": 8,\n                \"name\": \"Accordion\",\n                \"image\" : accordion,\n                \"sound\": accordionSound\n            }\n\n\n        ]\n    );\n    const [selectedInstrument, setSelectedInstrument] = useState(null);\n    const [questions, setQuestions] = useState(\n        [\n            {id:0, question:\"Find the piano!\", answer:\"Piano\", mode:\"easy\"},\n            {id:1, question:\"Click the clarinet!\", answer:\"Clarinet\", mode:\"easy\"},\n            {id:2, question:\"Can you find the cello?\", answer:\"Cello\", mode:\"easy\"},\n            {id:3, question:\"Where is the trumpet?\", answer:\"Trumpet\", mode:\"easy\"},\n            {id:4, question:\"Find the harp!\", answer:\"Harp\", mode:\"easy\"},\n            {id:5, question:\"Can you spot the accordion?\", answer:\"Accordion\", mode:\"easy\"},\n            {id:6, question:\"Where is the Saxophone?\", answer:\"Saxophone\", mode:\"easy\"},\n            {id:7, question:\"Find a String instrument!\", answer:\"String\", mode:\"hard\"},\n            {id:8, question:\"Which instrument is a Percussion instrument?\", answer:\"Drum\", mode:\"hard\"}\n        ])\n    const [selectedQuestion, setSelectedQuestion] = useState(null);\n    const [mode, setMode] = useState(\"easy\");\n    const [play] = useSound(null);\n\n \n\n\n    const instrumentClick = (instrumentKey) => {\n        const instrument = instruments[instrumentKey];\n        \n        return new Promise((resolve, reject) => {\n            setSelectedInstrument(instrument);\n        })\n        .then(play(instrument.sound))\n\n    }\n\n\n    const pressPlay = () => {\n        setSelectedInstrument(null);\n        const easyQs = [];\n        const hardQs = [];\n        questions.forEach(question => {\n            question.mode === \"easy\" ?\n            easyQs.push(question) :\n            hardQs.push(question)\n        });\n        const randomEasyQ = easyQs[Math.floor(Math.random() * easyQs.length)]\n        const randomHardQ= hardQs[Math.floor(Math.random() * hardQs.length)]\n        mode === \"easy\" ? setSelectedQuestion(randomEasyQ) \n        : setSelectedQuestion(randomHardQ)\n\n        \n    }\n\n    const resetEverything = () => {\n        setSelectedInstrument(null);\n        setSelectedQuestion(null);\n        setMode(\"easy\");\n    }\n\n    const modeChange = () => {\n        mode === \"easy\" ? setMode(\"hard\") : setMode(\"easy\")\n    }\n\n\n\n\n    return (\n        <div className=\"music-box\">\n            <div className=\"side-bar\">\n                <Title ></Title>\n                <GameButton selectedQuestion={selectedQuestion} selectedInstrument={selectedInstrument} pressPlay={pressPlay}></GameButton>\n                <GameWords mode={mode} selectedQuestion={selectedQuestion} selectedInstrument={selectedInstrument}></GameWords>\n                <ResetButton resetEverything={resetEverything}></ResetButton>\n                <HonkButton></HonkButton>\n                {/* <ModeToggle modeChange={modeChange}></ModeToggle> */}\n                \n            </div>\n            <InstrumentList selectedQuestion={selectedQuestion} selectedInstrument={selectedInstrument} instrumentClick={instrumentClick} instruments={instruments}></InstrumentList>\n            <div>\n            <Footer></Footer>\n            </div>\n        </div>\n    )\n}\n\nexport default MusicBox;","import React from 'react';\nimport MusicBox from './containers/MusicBox';\n\n\nfunction App() {\n  return (\n    <MusicBox />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}